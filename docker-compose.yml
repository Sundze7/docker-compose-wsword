
services:
  frontend:
    build:
      context: ./ws-web
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - api
    networks:
      - docker-compose-wsword_my-network


  api:
    build:
      context: ./ws-api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"    
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: example
    depends_on:
      - db
    networks:
      - docker-compose-wsword_my-network

  db:
    image: postgres:10.0-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: postgres
    ports:
      - "5433:5432" # changed host port to 5433
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - docker-compose-wsword_my-network

networks:
  docker-compose-wsword_my-network:

volumes:
  postgres-data:


# version: '3.8'

# services:
#   frontend:
#     build:
#       context: ./ws-web
#       dockerfile: Dockerfile
#     ports:
#       - "80:80"
#     depends_on:
#       - backend

#   backend:
#     build:
#       context: ./ws-api
#       dockerfile: Dockerfile
#     ports:
#       - "8080:8080"    
#     environment:
#       SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
#       SPRING_DATASOURCE_USERNAME: postgres
#       SPRING_DATASOURCE_PASSWORD: example
#     depends_on:
#       - db

#   db:
#     image: postgres:10.0-alpine
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: example
#       POSTGRES_DB: postgres
#     ports:
#       - "5433:5432" # changed host port to 5433